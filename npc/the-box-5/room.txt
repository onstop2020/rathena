force_3-3	mapflag	pvp
force_3-3	mapflag	novending
force_3-3	mapflag	nochat
force_3-3	mapflag	nowarp
force_3-3	mapflag	nowarpto
force_3-3	mapflag	nosave
force_3-3	mapflag	nobranch
force_3-3	mapflag	notomb

prontera,155,180,5	script	เล่น	966,{
	if(!isSafeReturn)
	{
		mes "คุณกลับเมืองด้วยวิธีอื่นที่ไม่ใช่การใช้ @load, Return Orb หรือการตาย คุณต้องตายเดี๋ยวนี้";
		next;
		menu "โอเค",-;
		close2;
		atcommand "@die";
		end;
	}
	// Get highest floor level of players
	.@highestLevel = max(1,min($maximumFloor,highestLevel));
	mes "โปรดระบุระดับ 1~" + .@highestLevel;
	// Players floor selection
	input .@floor;
	// Checking players selected floor conditions
	if((.@floor <= 0)
			|| (.@floor > .@highestLevel)
			|| (.@floor > $maximumFloor))
	{
		mes "ระดับที่ระบุผิดพลาด";
		close;
	}
	.@playingMapSize = getarraysize(.playingMaps$);
	// Check that floor had map yet?
	if(.playingMaps$[.@floor] == ""){
		freeloop(1);
		// Random map
		.@randomMap$ = $maps$[rand(0,($mapSize-1))];
		setarray .playingMaps$[.@floor],.@randomMap$;
		// Check map is not hit with others map that playing now
		for(.@i = 0; .@i < .@playingMapSize; .@i++){
			// Hit
			if(.@randomMap$ == .playingMaps$[.@i]){
				// Restart checking
				.@i = 0;
				// Random map
				.@randomMap$ = $maps$[rand(0,($mapSize-1))];
				setarray .playingMaps$[.@floor],.@randomMap$;
			}
		}
		freeloop(0);
	}
	.@tier = callsub(OnGetTier,.@floor);
	// Check kill amount
	.@killAmount = .killAmount[.@floor];
	// Not had remaining
	if(!.@killAmount){
		.@killAmount = .maximumKillAmount[.@tier];
		setarray .spawnedAmount[.@floor],0;
		// Setup 4 monster types
		for(.@i = 0; .@i < 4; .@i++)
		setarray getd(".monsterType" + .@floor + "["+ .@i +"]"),(.@tier == 0) ? $attackableMonsterTier1Ids[rand(0,$attackableMonsterTier1IdSize - 1)] : (.@tier == 1) ? $attackableMonsterTier2Ids[rand(0,$attackableMonsterTier2IdSize - 1)] : (.@tier == 2) ? $attackableMonsterTier3Ids[rand(0,$attackableMonsterTier3IdSize - 1)] : (.@tier == 3) ? $attackableMonsterTier4Ids[rand(0,$attackableMonsterTier4IdSize - 1)] : (.@tier == 4) ? $attackableMonsterTier5Ids[rand(0,$attackableMonsterTier5IdSize - 1)] : $attackableMonsterTier6Ids[rand(0,$attackableMonsterTier6IdSize - 1)];
	}
	@floor = .@floor;
	// Block
	setpcblock PCBLOCK_ALL,true;
	setpcblock PCBLOCK_MOVE,false;
	addtimer 2000,strnpcinfo(3) + "::OnWarp";
	// Warp now
	warp .playingMaps$[.@floor],0,0;
	// Spawn monster if needed
	callsub OnSpawnMonster,.@floor;
	end;
	
OnWarp:
	setpcblock PCBLOCK_ALL,false;
	end;
	
OnSpawnMonster:
	.@floor = getarg(0,-1);
	.@monsterRank = getarg(1,1);
	.@tier = callsub(OnGetTier,.@floor);
	// Unexpected error
	if(.@floor < 0)
	end;
	// Loop spawn
	for(.@i = 0; .@i < .maximumSpawnAmount[.@tier]; .@i++){
		// Already max
		if(.spawnedAmount[.@floor] >= .maximumSpawnAmount[.@tier])
		break;
		// Spawn
		monster .playingMaps$[.@floor],0,0,"--ja--",getd(".monsterType" + .@floor + "["+ rand(0,3) +"]"),1,strnpcinfo(0) + "::OnMonsterDead";
		// HP ((50 * Floor) * Floor) * 100 (Floor%) * 10 ((Floor / 2)%))
		.@hp = (50 * .@floor) * .@floor * ((rand(0,100) <= .@floor) ? 100 : 1) * ((rand(0,100) <= (.@floor / 2)) ? 10 : 1);
		// Capping
		.@hp = cap_value(.@hp,50,(INT_MAX - 1));
		// Set new rank
		setunitdata $@mobid[0],UMOB_DYNAMIC,.@monsterRank;
		// Set new hp
		setunitdata $@mobid[0],UMOB_HP,.@hp;
		setunitdata $@mobid[0],UMOB_MAXHP,.@hp;
		// Increase spawned amount
		setarray .spawnedAmount[.@floor],.spawnedAmount[.@floor] + 1;
	}
	
	end;
	
OnMonsterDead:
	if(!playerattached())
	end;
	setarray .spawnedAmount[@floor],.spawnedAmount[@floor] - 1;
	setarray .killAmount[@floor],.killAmount[@floor] + 1;
	
	// If spawn amount < 5 == Respawn immediately
	if(.spawnedAmount[@floor] < 5)
	callsub OnSpawnMonster,@floor;
	// If spawn amount < 50 == 10% Chance to respawn
	else if((.spawnedAmount[@floor] < 50)
			&& (rand(0,100) < 10))
	callsub OnSpawnMonster,@floor;
	end;
	
OnGetTier:
	.@floor = getarg(0,1);
	return (.@floor < 10) ? 0 : (.@floor < 20) ? 1 : (.@floor < 30) ? 2 : (.@floor < 50) ? 3 : (.@floor < 75) ? 4 : 5;
	
OnInit:
	waitingroom "เล่น",0;
	// Maximum floor
	$maximumFloor = 100;
	// Kill amount per floor to spawn big monster {<10<20<30<50<75<100}
	setarray .maximumKillAmount[0],50,100,200,300,400,500;
	// Max spawned amount per floor {<10<20<30<50<75<100}
	setarray .maximumSpawnAmount[0],50,75,100,125,150,175;
	// Available maps
	setarray $maps$[0],"gef_fild00","gef_fild01","gef_fild02","gef_fild03","gef_fild04","gef_fild05","gef_fild06","gef_fild07","gef_fild08","gef_fild09","gef_fild10","gef_fild11","gef_fild12","gef_fild13","gef_fild14","moc_fild01","moc_fild02","moc_fild03","moc_fild07","moc_fild11","moc_fild12","moc_fild13","moc_fild16","moc_fild17","moc_fild18","moc_fild19","pay_fild01","pay_fild02","pay_fild03","pay_fild04","pay_fild05","pay_fild06","pay_fild07","pay_fild08","pay_fild09","pay_fild10","pay_fild11","prt_fild00","prt_fild01","prt_fild02","prt_fild03","prt_fild04","prt_fild05","prt_fild06","prt_fild07","prt_fild08","prt_fild09","prt_fild10","prt_fild11","xmas_fild01","cmd_fild01","cmd_fild02","cmd_fild03","cmd_fild04","cmd_fild05","cmd_fild06","cmd_fild07","cmd_fild08","cmd_fild09","yuno_fild01","yuno_fild02","yuno_fild03","yuno_fild04","ama_fild01","gon_fild01","um_fild01","um_fild02","um_fild03","um_fild04","nif_fild01","nif_fild02","lou_fild01","ayo_fild01","ayo_fild02","yuno_fild05","yuno_fild07","yuno_fild08","yuno_fild09","yuno_fild11","yuno_fild12","ein_fild06","ein_fild07","ein_fild08","ein_fild09","ein_fild10","ein_fild03","ein_fild04","lhz_fild02","lhz_fild03","lhz_fild01","hu_fild07","hu_fild05","hu_fild04","hu_fild01","yuno_fild06","hu_fild02","hu_fild03","hu_fild06","ein_fild01","ein_fild02","ein_fild05","yuno_fild10","ra_fild01","ra_fild02","ra_fild03","ra_fild04","ra_fild05","ra_fild06","ra_fild07","ra_fild08","ra_fild09","ra_fild10","ra_fild11","ra_fild12","ra_fild13","ve_fild01","ve_fild02","ve_fild03","ve_fild04","ve_fild05","ve_fild06","ve_fild07","mosk_fild01","mosk_fild02","moc_fild20","moc_fild21","moc_fild22","man_fild01","man_fild03","spl_fild02","spl_fild03","moc_fild22b","man_fild02","spl_fild01","bra_fild01","dic_fild01","dic_fild02","bif_fild01","bif_fild02","dew_fild01","ma_fild01","ma_fild02","ecl_fild01","prt_fild08a","prt_fild08b","prt_fild08c","prt_fild08d","lasa_fild01","lasa_fild02","tra_fild","gw_fild01","gw_fild02";
	$mapSize = getarraysize($maps$);
	end;
}